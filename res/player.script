local anim_idle_down = hash("player-idle-down")
local anim_move_down = hash("player-move-down")

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("operator#camera", "enable")
	msg.post("@render:", "use_camera_projection")

	self.moving = false
	self.firing = false

	self.input = vmath.vector3()
	self.dir = vmath.vector3(0, 1, 0)
	self.speed = 50
	self.anim = nil
end

local function play_animation(self, anim)
	-- only play animations which are not already playing
	if self.anim ~= anim then
		-- tell the sprite to play the animation
		sprite.play_flipbook("#sprite", anim)
		-- remember which animation is playing
		self.anim = anim
	end
end

function update(self, dt)
	if self.moving then
		local pos = go.get_position()
		pos = pos + self.dir * self.speed * dt
		go.set_position(pos)

		if self.dir.y < 0 then
			play_animation(self, anim_move_down)
		end
	else
		play_animation(self, anim_idle_down)
	end

	if self.firing then
		local angle = math.atan2(self.dir.y, self.dir.x)
		local rot = vmath.quat_rotation_z(angle)
		local props = {dir = self.dir}
		factory.create("#rocketfactory", nil, rot, props)
	end

	self.input.x = 0
	self.input.y = 0

	self.firing = false
	self.moving = false
end

function on_input(self, action_id, action)
	if action_id == hash("up") then
		self.input.y = 1
	elseif action_id == hash("down")  then
		self.input.y = -1
	elseif action_id == hash("left") then
		self.input.x = -1
	elseif action_id == hash("right") then
		self.input.x = 1
	elseif action_id == hash("fire") and action.pressed then
		self.firing = true
	end

	if vmath.length(self.input) > 0 then
		self.moving = true
		self.dir = vmath.normalize(self.input)
	end
end